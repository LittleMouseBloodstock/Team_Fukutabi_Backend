# Deploy Python FastAPI (backend/) to Azure Web App - zip + bundled venv
name: Build & deploy FastAPI to Azure Web App (zip + venv)

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure backend/requirements.txt exists (copy if root-only)
        run: |
          if [ ! -f requirements.txt ] && [ -f ../requirements.txt ]; then
            echo "Copying ../requirements.txt -> backend/requirements.txt"
            cp ../requirements.txt requirements.txt
          fi
          ls -la

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Build virtualenv and install deps into ./backend/antenv
        shell: bash
        run: |
          python -m venv antenv
          source antenv/bin/activate
          python -V
          pip install --upgrade pip
          pip install -r requirements.txt
          python - <<'PY'
          import fastapi, uvicorn, pkgutil
          assert pkgutil.find_loader("gunicorn"), "gunicorn not installed"
          print("deps OK")
          PY

      - name: Create deployment zip (include antenv)
        run: |
          sudo apt-get update && sudo apt-get install -y zip
          # ここは既に backend/ に居るので 'cd' は不要
          zip -qr release.zip . -x "*/__pycache__/*" "*.pyc"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          # ワークスペース相対で明示（defaultsの影響を受けないように）
          path: backend/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "app-002-gen10-step3-2-py-oshima9"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_32DCBC11FA764CD5A832E64BEA3D77BF }}
          package: release.zip
